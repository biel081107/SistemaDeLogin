@model List<SistemaDeLogin.Models.Clientes>

@{
    ViewData["Title"] = "Clientes";
}
<style>
   .cliente-card {
    background-color: var(--dark);         /* fundo escuro */
    border: 1px solid var(--secondary);    /* contorno suave */
    border-radius: 20px;
    padding: 1.2rem 1.5rem;
    color: var(--text-light);
    box-shadow: 0 0 10px rgba(255, 215, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .cliente-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 0 15px var(--accent);
    }

    .cliente-card .fw-semibold {
        color: var(--accent);
        font-size: 1.1rem;
    }

    .cliente-actions {
        display: flex;
        gap: 0.5rem;
    }

    .cliente-actions button {
        background: none;
        border: 1px solid var(--accent);
        color: var(--accent);
        padding: 0.3rem 0.6rem;
        border-radius: 0.4rem;
        transition: background-color 0.2s ease;
    }

    .cliente-actions button:hover {
        background-color: var(--accent);
        color: var(--dark);
    }

    .cliente-actions form {
        display: inline-block;
    }
    .btn-accent-outline {
    border: 1px solid var(--accent);
    color: var(--accent);
    background: transparent;
    transition: background-color 0.2s ease, color 0.2s ease;
    }

    .btn-accent-outline:hover {
        background-color: var(--accent);
        color: var(--dark);
    }
    .modal-content {
        background-color: var(--dark);
        color: var(--text-light);
        border-radius: 12px;
        border: 1px solid var(--secondary);
    }

    .modal-header,
    .modal-footer {
        border-color: var(--secondary);
    }

    .modal-title {
        color: var(--accent);
    }

    .modal-body label {
        color: var(--accent);
    }

    .modal-body input,
    .modal-body textarea,
    .modal-body select {
        background-color: #2c2c2c;
        color: #fff;
        border: 1px solid var(--secondary);
    }

    .modal-body input:focus,
    .modal-body textarea:focus,
    .modal-body select:focus {
        border-color: var(--accent);
        outline: none;
        box-shadow: 0 0 0 0.15rem rgba(255, 193, 7, 0.25);
    }

    .btn-warning {
        background-color: var(--accent);
        color: var(--dark);
    }

    .btn-warning:hover {
        background-color: #e0a800;
    }
    .pagination .page-link {
        background-color: #fad259;
        color: var(--dark);
        transition: background-color 0.2s ease, color 0.2s ease;
        box-shadow: 0 2px 6px rgba(0,0,0,0.3);
    }
    .pagination .page-item.active .page-link {
        background-color: #ffbb00;
        color: var(--dark);
        font-weight: bold;
    }
    .pagination .page-link:hover {
        background-color: #e0a800;
        color: var(--dark);
    }

    .pagination .page-item.disabled .page-link {
        background-color: #ccc;
        color: #666;
        cursor: not-allowed;
        box-shadow: none;
    }
    

    .alert-warning {
        background-color: #3a3a3a;
        color: #f8d34b;
        border-color: var(--accent);
    }
</style>

@* Mensagens de sucesso e erro *@
@if (TempData["Sucesso"] != null)
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        @TempData["Sucesso"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
    </div>
}
@if (TempData["Erro"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        @TempData["Erro"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
    </div>
}

<section class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-2">
        <div class="position-relative flex-grow-1">
            <input type="text" id="searchInput" placeholder="Buscar cliente por nome..." class="form-control border-0 shadow-sm px-4 py-2 rounded-3" autocomplete="off" />
            <ul id="suggestions" class="list-group position-absolute w-100 z-3 mt-1 rounded shadow-sm"></ul>
        </div>
        <a href="/Cliente/Adicionar" class="btn btn-warning d-flex align-items-center gap-2 shadow-sm px-3 py-2" title="Adicionar novo cliente">
            <i class="fas fa-user-plus"></i> Novo Cliente
        </a>
    </div>

    <div id="clientesList" class="list-group"></div>

    <nav>
        <ul id="pagination" class="pagination justify-content-center mt-4"></ul>
    </nav>
</section>

<!-- Modal -->
<div id="clienteModal" class="modal-container d-none">
    <div class="modal-card bg-dark-custom text-light-custom">
        <div class="modal-header border-0">
            <h5 id="modalTitle">Cliente</h5>
            <button class="btn-close text-light-custom" onclick="closeModal()">Ã—</button>
        </div>
        <div class="modal-body" id="modalContent"></div>
    </div>
</div>

@section Scripts {
<script>
    const clientes = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));
    const isAdmin = '@User.IsInRole("Admin")'.toLowerCase() === 'true';
    const searchInput = document.getElementById('searchInput');
    const suggestions = document.getElementById('suggestions');
    const clientesList = document.getElementById('clientesList');

    const itensPorPagina = 6;
    let paginaAtual = 1;
    let clientesFiltrados = [...clientes];

    function renderizarClientes(lista, pagina = 1) {
        clientesList.innerHTML = '';
        const inicio = (pagina - 1) * itensPorPagina;
        const fim = inicio + itensPorPagina;
        const paginaClientes = lista.slice(inicio, fim);

        if (paginaClientes.length === 0) {
            clientesList.innerHTML = '<div class="alert alert-warning text-center">Nenhum cliente encontrado.</div>';
            document.getElementById('pagination').innerHTML = '';
            return;
        }

        paginaClientes.forEach(cliente => {
            clientesList.innerHTML += `
                <div class="cliente-card d-flex justify-content-between align-items-center mb-3">
                    <span class="fw-semibold">${cliente.Nome}</span>
                    <div class="btn-group">
                        <button class="btn btn-sm btn-accent-outline" onclick="openModal('edit', ${cliente.IdCliente})" title="Editar">
                            <i class="fas fa-pen"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-info" onclick="openModal('details', ${cliente.IdCliente})" title="Detalhes">
                            <i class="fas fa-eye"></i>
                        </button>
                        <form method="post" action="/Cliente/Deletar" onsubmit="return confirm('Deseja realmente excluir este cliente?');" class="d-inline">
                            <input type="hidden" name="idCliente" value="${cliente.IdCliente}" />
                            ${isAdmin ? `
                                <button type="submit" class="btn btn-sm btn-outline-danger" title="Excluir">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            ` : ''}
                        </form>
                    </div>
                </div>`;
        });

        renderizarPaginacao(lista.length, pagina);
    }

    function renderizarPaginacao(totalItens, paginaAtual) {
        const totalPaginas = Math.ceil(totalItens / itensPorPagina);
        let paginacaoHtml = '';

        if (paginaAtual > 1) {
            paginacaoHtml += `
                <li class="page-item">
                    <button class="page-link bg-warning border-dark" onclick="mudarPagina(${paginaAtual - 1})">&laquo</button>
                </li>`;
        }

        for (let i = 1; i <= totalPaginas; i++) {
            paginacaoHtml += `<li class="page-item ${i === paginaAtual ? 'active' : ''}">
                <button class="page-link bg-warning border-dark" onclick="mudarPagina(${i})">${i}</button>
            </li>`;
        }

        if (paginaAtual < totalPaginas) {
            paginacaoHtml += `
                <li class="page-item">
                    <button class="page-link bg-warning border-dark" onclick="mudarPagina(${paginaAtual + 1})">&raquo</button>
                </li>`;
        }

        document.getElementById('pagination').innerHTML = paginacaoHtml;
    }

    function mudarPagina(novaPagina) {
        paginaAtual = novaPagina;
        renderizarClientes(clientesFiltrados, paginaAtual);
    }

    searchInput.addEventListener('input', function () {
        const query = this.value.toLowerCase().trim();
        suggestions.innerHTML = '';

        if (query === '') {
            clientesFiltrados = [...clientes];
            renderizarClientes(clientesFiltrados, 1);
            return;
        }

        const resultados = clientes.filter(c => c.Nome.toLowerCase().includes(query));
        clientesFiltrados = resultados;
        renderizarClientes(clientesFiltrados, 1);

        resultados.slice(0, 6).forEach(cliente => {
            const li = document.createElement('li');
            li.className = 'list-group-item list-group-item-action';
            li.textContent = cliente.Nome;
            li.onclick = () => {
                searchInput.value = cliente.Nome;
                suggestions.innerHTML = '';
                clientesFiltrados = clientes.filter(c => c.Nome.toLowerCase().includes(cliente.Nome.toLowerCase()));
                renderizarClientes(clientesFiltrados, 1);
            };
            suggestions.appendChild(li);
        });
    });

    document.addEventListener('click', function (e) {
        if (!searchInput.contains(e.target) && !suggestions.contains(e.target)) {
            suggestions.innerHTML = '';
        }
    });

    function openModal(type, id) {
        const cliente = clientes.find(c => c.IdCliente === id);
        if (!cliente) return alert("Cliente nÃ£o encontrado.");

        const modal = document.getElementById('clienteModal');
        const modalTitle = document.getElementById('modalTitle');
        const modalContent = document.getElementById('modalContent');

        if (type === 'edit') {
            modalTitle.innerText = 'Editar Cliente';
            modalContent.innerHTML = `
                <form method="post" action="/Cliente/Editar">
                    <input type="hidden" name="IdCliente" value="${cliente.IdCliente}" />
                    <div class="mb-3">
                        <label class="form-label">Nome:</label>
                        <input name="Nome" class="form-control" value="${cliente.Nome}" required />
                    </div>

                    ${isAdmin ? `
                        <div class="mb-3">
                            <label class="form-label">CPF:</label>
                            <input name="Cpf" class="form-control" value="${cliente.Cpf || ''}" required />
                        </div>` 
                        : `<input type="hidden" name="Cpf" value="${cliente.Cpf}" />`
                    }
                    <div class="mb-3">
                        <label class="form-label">Telefone:</label>
                        <input name="Telefone" class="form-control" value="${cliente.Telefone || ''}" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Email:</label>
                        <input type="email" name="Email" class="form-control" value="${cliente.Email || ''}" required />
                    </div>

                    <button type="submit" class="btn btn-warning rounded-pill px-4">Salvar</button>
                </form>`;
        } else if (type === 'details') {
            modalTitle.innerText = 'Detalhes do Cliente';
            modalContent.innerHTML = `
                <p><strong>Nome:</strong> ${cliente.Nome}</p>
                ${isAdmin ? `<p><strong>CPF:</strong> ${cliente.Cpf || 'NÃ£o informado'}</p>` : ''}
                <p><strong>Telefone:</strong> ${cliente.Telefone || 'NÃ£o informado'}</p>
                <p><strong>Email:</strong> ${cliente.Email || 'NÃ£o informado'}</p>
                <p><strong>Qnt de serviÃ§os pedidos:</strong> ${cliente.Servicos ? cliente.Servicos.length : 0}</p>`

        }

        modal.classList.remove('d-none');
    }

    function closeModal() {
        document.getElementById('clienteModal').classList.add('d-none');
    }

    document.addEventListener('DOMContentLoaded', () => {
        renderizarClientes(clientesFiltrados, paginaAtual);
    });
</script>
}
